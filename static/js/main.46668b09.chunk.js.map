{"version":3,"sources":["items/bubble.jpg","items/header.js","items/content.js","items/contact1.js","history.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","color","menuButton","marginRight","spacing","typography","marginLeft","contact","border","padding","right","DenseAppBar","classes","className","AppBar","style","backgroundColor","position","Toolbar","variant","IconButton","edge","aria-label","Typography","to","marginTop","width","left","Content","createBrowserHistory","App","history","src","Background","height","exact","path","component","Content1","withRouter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.46668b09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bubble.2019288e.jpg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport {\n    BrowserRouter as Router,\n    Link,\n  } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    color:\"white\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  typography:{\n      marginLeft:\"1rem\"\n  }, \n  contact:{\n      border:\"solid white 2px\",\n      padding:\"5px\", \n      right:\"10%\"\n  }\n}));\n\nexport default function DenseAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar style={{backgroundColor:\"transparent\"}} position=\"static\">\n        <Toolbar variant=\"dense\">\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Router>\n          <Typography className={classes.typography} variant=\"h6\" >\n          <Link to=\"/\">Home</Link>{' '}\n\n          </Typography>\n          <Typography className={classes.typography} variant=\"h6\" >\n          <Link to=\"/about\">aaaa</Link>{' '}\n\n          </Typography>\n          <Typography className={classes.typography} variant=\"h6\" >\n            Current Activity\n          </Typography>\n          <Typography className={[classes.typography, classes.contact]} variant=\"h6\" >\n            Contact\n          </Typography>\n          </Router>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor:\"rgb(224,224,224,0.8)\", marginTop:\"30vh\",\n    width:\"50vw\",left:\"25%\",right:\"25%\" \n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  typography:{\n      marginLeft:\"1rem\"\n  }\n}));\n\nexport default function Content() {\n  const classes = useStyles();\n\n  return (\n        <Paper className={classes.root}>\n          \n          <Typography className={classes.typography} variant=\"h6\" >\n            About\n          </Typography>\n          <Typography className={classes.typography} variant=\"h6\" >\n            Projects\n          </Typography>\n          <Typography className={classes.typography} variant=\"h6\" >\n            Current Activity\n          </Typography>\n          <Typography className={classes.typography} variant=\"h6\" >\n            Contact\n          </Typography>\n        </Paper>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor:\"rgb(224,224,224,0.8)\", marginTop:\"30vh\",\n    width:\"50vw\",left:\"25%\",right:\"25%\" \n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  typography:{\n      marginLeft:\"1rem\"\n  }\n}));\n\nexport default function Content() {\n  const classes = useStyles();\n\n  return (\n        <Paper className={classes.root}>\n          \n          <Typography className={classes.typography} variant=\"h6\" >\n            \n          </Typography>\n          <Typography className={classes.typography} variant=\"h6\" >\n            \n          </Typography>\n          <Typography className={classes.typography} variant=\"h6\" >\n             Activity\n          </Typography>\n          <Typography className={classes.typography} variant=\"h6\" >\n            \n          </Typography>\n        </Paper>\n  );\n}","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React from 'react';\nimport './App.css';\nimport Dash from './items/header.js'\nimport Background from './items/bubble.jpg'\nimport Content from './items/content.js'\nimport Content1 from './items/contact1.js'\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link,\n  withRouter\n} from 'react-router-dom';\nimport history from './history';\n\nfunction App() {\n  return (\n    <Router history={history}>\n\n    <div>\n      <img src={Background}\n        style={{ height: \"100vh\", width: \"100vw\", position: \"absolute\" }}\n      />\n      <div>\n        <Dash />\n      </div>\n\n        <div>\n            <Route exact path=\"/\" component={Content1} />\n            <Route path=\"/about\" component={withRouter(Content)} />\n        </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}